== Drawing a Line Chart ==
{{{
int [] data = new int[] { 40, 30, 20, 10, 0 };

// Specify chart width and height in pixels
LineChart chart = new LineChart(150, 150);

// SetData will accept int[] and float[] for single data sets
chart.SetData(data);

string imageUrl = chart.GetUrl();
}}}

== Adding Axises ==
{{{
int [] data = new int[] { 40, 30, 20, 10, 0 };

LineChart chart = new LineChart(150, 150);
chart.SetData(data);

/*
Create an axis along the bottom of the graph
Labels will be automatically generated by the API using the range values.
*/
ChartAxis bottomAxis = new ChartAxis(ChartAxisType.Bottom);
bottomAxis.SetRange(0, 500);
bottomAxis.HexColor = "00FF00";
bottomAxis.FontSize = 14;
chart.AddAxis(bottomAxis);

/* 
Create an axis along the top of the graph
This time we specify the labels ("text", position)
The default range for an axis is 0-100
*/
ChartAxis topAxis = new ChartAxis(ChartAxisType.Top);
topAxis.AddLabel(new ChartAxisLabel("one", 0));
topAxis.AddLabel(new ChartAxisLabel("two", 75));
topAxis.AddLabel(new ChartAxisLabel("three", 100));
chart.AddAxis(topAxis);

string imageUrl = chart.GetUrl();
}}}

== Working with multiple data sets ==
{{{
/*
Each data set should be contained in an int[] or float[]
To work the multiple data sets add them to a data structure that implements ICollection
*/
List<float[]> = new List<float[]>();
float[] set1x= new float[] { 0, 30, 60, 70, 90, 95, 100 };
dataList.Add(fdata);
float[] set1y = new float[] { 20, 30, 40, 50, 60, 70, 80 };
dataList.Add(fdata);
float[] set2x = new float[] { 10, 30, 40, 45, 52 };
dataList.Add(fdata);
float[] set2y = new float[] { 100, 90, 40, 20, 10 };
dataList.Add(fdata);
}}}